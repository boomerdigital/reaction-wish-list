extend type Query {
  "Return wishlist for logged in user"
  fetchWishlistItems: Wishlist
}

extend type Mutation {
  "Add product to wishlist"
  addProductToWishlist(input: AddProductWishlistInput!): addProductToWishlistPayload!
  removeProductFromWishlist(input: removeProductFromWishlistInput!): removeProductFromWishlistPayload!
}

input AddProductWishlistInput {
  "The product's ID"
  productId: ID!

  "The ID's ID"
  variantId: ID
}

input removeProductFromWishlistInput {
  itemId: ID!
}

type addProductToWishlistPayload {
  "The modified wishlist"
  wishlist: Wishlist

  "The same string you sent with the mutation params, for matching mutation calls with their responses"
  clientMutationId: String
}

type removeProductFromWishlistPayload {
  "Item id removed from Wishlist"
  itemId: ID

  "The same string you sent with the mutation params, for matching mutation calls with their responses"
  clientMutationId: String
}


type WishlistItem {
  _id: ID
  productId: ID
  variantId: ID
}

type Wishlist {
  userId: ID
  items: [WishlistItem]
}